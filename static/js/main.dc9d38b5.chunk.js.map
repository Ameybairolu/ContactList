{"version":3,"sources":["ContactsContainer/ContactsAlphabet/ContactsAlphabet.module.css","ContactsContainer/ContactsContainer.module.css","AddContact/AddContact.module.css","AddContact/AddContactForm/AddContactForm.module.css","ContactsContainer/ContactsAlphabet/ContactsAlphabet.js","ContactsContainer/ContactsRow/ContactsRowAllDetails.js","ContactsContainer/ContactsRow/ContactsRow.js","ContactsContainer/ContactsContainer.js","NonReactJSFunctions/deleteUserFromArray.js","EditDisplay/EditDisplay.js","AddContact/AddContactForm/AddContactForm.js","AddContact/AddContact.js","App.js","index.js","EditDisplay/EditDisplay.module.css","ContactsContainer/ContactsRow/ContactsRow.module.css","ContactsContainer/ContactsRow/ContactsRowAllDetails.module.css"],"names":["module","exports","ContactsAlphabet","props","className","classes","common","initials","ContactsRowAllDetails","myRef","createRef","useEffect","setTimeout","current","previousSibling","scrollIntoView","behavior","ref","table_container","table","heading","colSpan","data","username","email","phone","website","address","suite","street","city","zipcode","company","name","catchPhrase","bs","ContactsRow","ini","split","reduce","prev","curr","charAt","start","id","expandFor","selected","onClick","onExpand","bind","circle","names","actionspace","onEdit","onDelete","ContactsContainer","obtainEachRow","map","eachContact","index","i","findIndex","x","container","deleteUserFromArray","obtainedData","filter","eachUser","EditDisplay","useState","addressVisible","addressVisibleChange","initialState","user","useReducer","state","action","type","updatedData","item","dispatch","uponMakingChanges","changed","event","target","value","edit_container","modal","form","onSubmit","preventDefault","submit","defaultValue","onChange","title","bool","discard","geo","lat","lng","nameReducer","_","val","isValid","length","cityReducer","reducer","AddContactForm","companyVisible","companyVisibleChange","nameInputRef","useRef","cityInputRef","nameState","dispatchName","cityState","dispatchCity","onCancelForm","focus","placeholder","required","AddContact","addFormVisible","setFormVisible","showFormToggle","contact_button","App","setData","showEditDisplay","setEditDisplay","dataToEdit","setDataToEdit","expandDetailsID","setexpandDetailsID","fetchContactDataFromAPI","useCallback","a","fetch","response","ok","Error","json","result","sort","b","console","log","e","stopPropagation","selectedData","window","confirm","method","onClickEditHandler","currState","body","JSON","stringify","headers","then","maxID","max","obj","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc9d38b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"ContactsAlphabet_common__3ciW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsContainer_container__3Vt1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_button\":\"AddContact_contact_button__3f77F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"edit_container\":\"AddContactForm_edit_container__1OPf6\",\"modal\":\"AddContactForm_modal__1B_Mg\",\"form\":\"AddContactForm_form__19h-U\",\"submit\":\"AddContactForm_submit__1Ovw-\",\"title\":\"AddContactForm_title__2HdNa\",\"discard\":\"AddContactForm_discard__bp3Zv\"};","import classes from './ContactsAlphabet.module.css';\r\n\r\nconst ContactsAlphabet = (props) => {\r\n\r\n    return (\r\n        <div className={classes.common}>\r\n            {props.initials}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsAlphabet;","import classes from './ContactsRowAllDetails.module.css';\r\nimport { createRef, useEffect } from 'react';\r\n\r\nconst ContactsRowAllDetails = (props) => {\r\n\r\n    const myRef = createRef();\r\n\r\n    // The below function is required so that when we click on any user, the row shifts to the top of the view.\r\n\r\n    useEffect(() => {\r\n        const delay = setTimeout(() => {\r\n            myRef.current.previousSibling.scrollIntoView({ behavior: \"smooth\" });\r\n        }, 500)\r\n        return delay;\r\n    }, [myRef]);\r\n\r\n    return (\r\n        <div ref={myRef} className={classes.table_container}>\r\n            <table className={classes.table}>\r\n                <tbody>\r\n                    <tr className={classes.heading}>\r\n                        <td colSpan={2}>\r\n                            Basic Details\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Username:</td>\r\n                        <td>{props.data.username}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email:</td>\r\n                        <td>{props.data.email}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Phone:</td>\r\n                        <td>{props.data.phone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Website:</td>\r\n                        <td>{props.data.website}</td>\r\n                    </tr>\r\n                    <tr className={classes.heading}>\r\n                        <td colSpan={2}>\r\n                            Address\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Suite:</td>\r\n                        <td>{props.data.address.suite}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Street:</td>\r\n                        <td>{props.data.address.street}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>City:</td>\r\n                        <td>{props.data.address.city}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>ZipCode:</td>\r\n                        <td>{props.data.address.zipcode}</td>\r\n                    </tr>\r\n                    <tr className={classes.heading}>\r\n                        <td colSpan={2}>\r\n                            Company Details\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Name:</td>\r\n                        <td>{props.data.company.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Catch-Phrase:</td>\r\n                        <td>{props.data.company.catchPhrase}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>BS:</td>\r\n                        <td>{props.data.company.bs}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ContactsRowAllDetails;","\r\nimport classes from './ContactsRow.module.css';\r\nimport ContactsAlphabet from '../ContactsAlphabet/ContactsAlphabet';\r\nimport ContactsRowAllDetails from './ContactsRowAllDetails';\r\nimport TextLoop from \"react-text-loop\";\r\n\r\n//This component is responsible for rendering each row and also, when contact information of any one contact is needed to be displayed, this uses ContactsRowAllDetails component to display the additional details\r\n\r\nconst ContactsRow = (props) => {\r\n    let ini = props.data.name.split(\" \").reduce((prev, curr) => {\r\n        return prev + curr.charAt(0);\r\n    }, \"\");\r\n\r\n    return (\r\n        <>\r\n            {props.start && <ContactsAlphabet initials={props.data.name.charAt(0)} />}\r\n            <div id={`user${props.data.id}`} className={`${classes.common} ${props.expandFor === props.data.id ? classes.selected : ''}`} onClick={props.onExpand.bind(this, props.data.id)}>\r\n                <div className={classes.circle}><span>{ini}</span></div>\r\n                <div className={classes.names}>\r\n                    <h3>{props.data.name}</h3>\r\n                    <TextLoop>\r\n                        <h6>{props.data.email}</h6>\r\n                        <h6>{props.data.username}</h6>\r\n                        <h6>{props.data.phone}</h6>\r\n                        <h6>{props.data.website}</h6>\r\n                    </TextLoop>\r\n                </div>\r\n                <p className={classes.actionspace}><span><i className=\"fas fa-edit\" onClick={props.onEdit.bind(this, props.data.id)}></i></span><span > &nbsp;&nbsp; <i className=\"fas fa-trash-alt\" onClick={props.onDelete.bind(this, props.data.id)}></i></span></p>\r\n            </div>\r\n            {props.expandFor === props.data.id && <ContactsRowAllDetails data={props.data} />}\r\n        </>\r\n    );\r\n};\r\n// onClick={props.onClickEdit.bind(this, props.id)}\r\n// onClick={props.onDeleteUser.bind(this, props.id)}\r\nexport default ContactsRow;","import ContactsRow from \"./ContactsRow/ContactsRow\";\r\nimport classes from \"./ContactsContainer.module.css\";\r\n\r\n// This component displays all the contacts\r\n\r\nconst ContactsContainer = (props) => {\r\n\r\n    //The below variable-cum-function is required to obtain each contact row through the ContactsRow component \r\n\r\n    const obtainEachRow = props.data.map((eachContact, index) => {\r\n        const i = props.data.findIndex(x => x.name.charAt(0) === eachContact.name.charAt(0));\r\n        return (\r\n            <ContactsRow key={eachContact.id} data={eachContact} start={i === index} onDelete={props.onDelete} onEdit={props.onEdit} onExpand={props.onExpand} expandFor={props.expandFor} />\r\n        );\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {obtainEachRow}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsContainer;","const deleteUserFromArray = (id, obtainedData) => {\r\n    const updatedData = obtainedData.filter(eachUser => {\r\n        return eachUser.id !== id;\r\n    });\r\n\r\n    return updatedData;\r\n}\r\n\r\nexport default deleteUserFromArray;","import { useReducer, useState } from 'react';\r\n\r\nimport classes from './EditDisplay.module.css';\r\n\r\n\r\nconst EditDisplay = (props) => {\r\n\r\n    const [addressVisible, addressVisibleChange] = useState(false);\r\n\r\n    // InitialState stores data of the contact that was clicked upon\r\n\r\n    const initialState = {\r\n        ...props.user\r\n    }\r\n\r\n    // Whenever a change is detected at any input, the below function is called through the useReducer hook at like 59\r\n\r\n    function reducer(state, action) {\r\n        if (action.type === 'name') {\r\n            const updatedData = { ...state };\r\n            updatedData.name = action.item;\r\n            return updatedData;\r\n        }\r\n        if (action.type === 'email') {\r\n            const updatedData = { ...state };\r\n            updatedData.email = action.item;\r\n            return updatedData;\r\n        }\r\n        if (action.type === 'phone') {\r\n            const updatedData = { ...state };\r\n            updatedData.phone = action.item;\r\n            return updatedData;\r\n        }\r\n        if (action.type === 'company') {\r\n            const updatedData = { ...state };\r\n            updatedData.company.name = action.item;\r\n            return updatedData;\r\n        }\r\n        if (action.type === 'city') {\r\n            const updatedData = { ...state };\r\n            updatedData.address.city = action.item;\r\n            return updatedData;\r\n        }\r\n        if (action.type === 'street') {\r\n            const updatedData = { ...state };\r\n            updatedData.address.street = action.item;\r\n            return updatedData;\r\n        }\r\n        if (action.type === 'zipcode') {\r\n            const updatedData = { ...state };\r\n            updatedData.address.zipcode = action.item;\r\n            return updatedData;\r\n        }\r\n\r\n        return initialState;\r\n\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    // Data when edited triggers the below funtion\r\n\r\n    function uponMakingChanges(changed, event) {\r\n        dispatch({\r\n            type: changed,\r\n            item: event.target.value\r\n        });\r\n    }\r\n\r\n    // NOTE: When we commit changes, the below function is called. Which in turn sends data to submitAddUserHandler function in App.js\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n        props.submit(state);\r\n    }\r\n\r\n    // NOTE: When user wants to discard changes, the below function is called\r\n\r\n    function discardChangesHandler(bool, event) {\r\n        event.preventDefault();\r\n        props.submit(state, bool);\r\n    }\r\n\r\n    // NOTE:When we click on the \"Address\" row in the edit window, we need to display additional details of Address. The below functon is mainly for that\r\n\r\n    function clickOnAddressHandler() {\r\n        const bool = addressVisible;\r\n        addressVisibleChange(!bool);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.edit_container}>\r\n            <div className={classes.modal}>\r\n                <br />\r\n                <form className={classes.form} onSubmit={submitHandler}>\r\n                    <h5>Name:</h5>\r\n                    <input type=\"text\" defaultValue={state.name} onChange={uponMakingChanges.bind(this, \"name\")} />\r\n                    <h5>Email:</h5>\r\n                    <input type=\"text\" defaultValue={state.email} onChange={uponMakingChanges.bind(this, \"email\")} />\r\n                    <h5>Phone:</h5>\r\n                    <input type=\"text\" defaultValue={state.phone} onChange={uponMakingChanges.bind(this, \"phone\")} />\r\n                    <h5>Company:</h5>\r\n                    <input type=\"text\" defaultValue={state.company.name} onChange={uponMakingChanges.bind(this, \"company\")} />\r\n                    <h5 className={classes.title} onClick={clickOnAddressHandler}>Address {addressVisible ? '🔼' : '🔽'}</h5>\r\n                    {addressVisible && <div>\r\n                        <h5>City:</h5>\r\n                        <input type=\"text\" defaultValue={state.address.city} onChange={uponMakingChanges.bind(this, \"city\")} />\r\n                        <h5>Street:</h5>\r\n                        <input type=\"text\" defaultValue={state.address.street} onChange={uponMakingChanges.bind(this, \"street\")} />\r\n                        <h5>ZipCode:</h5>\r\n                        <input type=\"text\" defaultValue={state.address.zipcode} onChange={uponMakingChanges.bind(this, \"zipcode\")} />\r\n                    </div>}\r\n                    <p className={classes.submit}><button type=\"submit\" >Edit Changes</button></p>\r\n                    <p className={classes.submit}><button onClick={discardChangesHandler.bind(this, true)} className={classes.discard}>Discard Changes</button></p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDisplay;","import { useReducer, useState, useRef } from 'react';\r\n\r\nimport classes from './AddContactForm.module.css';\r\n\r\nconst initialState = {\r\n    address: {\r\n        city: null,\r\n        geo: {\r\n            lat: \"40.783386\",\r\n            lng: \"-74.04485\",\r\n\r\n        },\r\n        street: \"Longview Avenue\",\r\n        suite: \"Suite 879\",\r\n        zipcode: \"10004\",\r\n    },\r\n    company: {\r\n        bs: \"synergize scalable supply-chains\",\r\n        catchPhrase: \"Proactive didactic contingency\",\r\n        name: \"Sounds of Soul Records & Tapes\",\r\n    },\r\n    email: \"MildredLGarcia@dayrep.com\",\r\n    id: null,\r\n    name: null,\r\n    phone: \"718-569-8769\",\r\n    username: \"Frethe\",\r\n    website: \"quiiri.com\"\r\n}\r\n\r\nconst nameReducer = (_, action) => {\r\n    if (action.type === 'USER_INPUT') {\r\n        return {\r\n            value: action.val,\r\n            isValid: !(action.val === null || action.val.length === 0)\r\n        }\r\n    }\r\n    return { value: '', isValid: false };\r\n}\r\n\r\nconst cityReducer = (_, action) => {\r\n    if (action.type === 'USER_INPUT') {\r\n        return {\r\n            value: action.val,\r\n            isValid: action.val !== null || action.val.length !== 0\r\n        }\r\n    }\r\n    return { value: '', isValid: false };\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    if (action.type === 'name') {\r\n        const updatedData = { ...state };\r\n        updatedData.name = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'email') {\r\n        const updatedData = { ...state };\r\n        updatedData.email = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'phone') {\r\n        const updatedData = { ...state };\r\n        updatedData.phone = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'username') {\r\n        const updatedData = { ...state };\r\n        updatedData.username = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'web') {\r\n        const updatedData = { ...state };\r\n        updatedData.website = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'company') {\r\n        const updatedData = { ...state };\r\n        updatedData.company.name = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'bs') {\r\n        const updatedData = { ...state };\r\n        updatedData.company.bs = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'catch') {\r\n        const updatedData = { ...state };\r\n        updatedData.company.catchPhrase = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'city') {\r\n        const updatedData = { ...state };\r\n        updatedData.address.city = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'lat') {\r\n        const updatedData = { ...state };\r\n        updatedData.address.geo.lat = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'lng') {\r\n        const updatedData = { ...state };\r\n        updatedData.address.geo.lng = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'street') {\r\n        const updatedData = { ...state };\r\n        updatedData.address.street = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'suite') {\r\n        const updatedData = { ...state };\r\n        updatedData.address.suite = action.item;\r\n        return updatedData;\r\n    }\r\n    if (action.type === 'zipcode') {\r\n        const updatedData = { ...state };\r\n        updatedData.address.zipcode = action.item;\r\n        return updatedData;\r\n    }\r\n\r\n\r\n    return initialState;\r\n\r\n}\r\n\r\n\r\n\r\nconst AddContactForm = (props) => {\r\n\r\n    const [addressVisible, addressVisibleChange] = useState(false);\r\n    const [companyVisible, companyVisibleChange] = useState(false);\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const nameInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const [nameState, dispatchName] = useReducer(nameReducer, { value: '', isValid: null });\r\n\r\n    const [cityState, dispatchCity] = useReducer(cityReducer, { value: '', isValid: null });\r\n\r\n\r\n    function uponMakingChanges(changed, event) {\r\n        if (changed === 'name') {\r\n            dispatchName({\r\n                type: 'USER_INPUT', val: event.target.value,\r\n            });\r\n        }\r\n\r\n        if (changed === 'city') {\r\n            dispatchCity({\r\n                type: 'USER_INPUT', val: event.target.city,\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: changed,\r\n            item: event.target.value\r\n        });\r\n    }\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (nameState.isValid && cityState.isValid) {\r\n            props.onCancelForm();\r\n            props.submit(state);\r\n        } else if (!nameState.isValid) {\r\n            nameInputRef.current.focus();\r\n        } else {\r\n            addressVisibleChange(true);\r\n            setTimeout(() => {\r\n                cityInputRef.current.focus();\r\n            }, 1000);\r\n        }\r\n\r\n    }\r\n\r\n    function clickOnAddressHandler() {\r\n        const bool = addressVisible;\r\n        addressVisibleChange(!bool);\r\n        companyVisibleChange(false);\r\n    }\r\n\r\n    function clickOnCompanyHandler() {\r\n        const bool = companyVisible;\r\n        companyVisibleChange(!bool);\r\n        addressVisibleChange(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.edit_container}>\r\n            <div className={classes.modal}>\r\n                <br />\r\n                <form className={classes.form} onSubmit={submitHandler}>\r\n                    <h5>Name:</h5>\r\n                    <input ref={nameInputRef} type=\"text\" placeholder=\"Your Name\" defaultValue={state.name} onChange={uponMakingChanges.bind(this, \"name\")} />\r\n                    <h5>Username:</h5>\r\n                    <input type=\"text\" placeholder=\"Select Username\" defaultValue={state.username} onChange={uponMakingChanges.bind(this, \"username\")} />\r\n                    <h5>Email:</h5>\r\n                    <input type=\"text\" placeholder=\"Email\" defaultValue={state.email} onChange={uponMakingChanges.bind(this, \"email\")} />\r\n                    <h5>Website:</h5>\r\n                    <input type=\"text\" placeholder=\"Website\" defaultValue={state.website} onChange={uponMakingChanges.bind(this, \"web\")} />\r\n                    <h5>Phone:</h5>\r\n                    <input type=\"text\" placeholder=\"Enter Phone Number\" defaultValue={state.phone} onChange={uponMakingChanges.bind(this, \"phone\")} />\r\n                    <h5 className={classes.title} onClick={clickOnAddressHandler}>Address {addressVisible ? '🔼' : '🔽'}</h5>\r\n                    {addressVisible && <div>\r\n                        <h5>Suite:</h5>\r\n                        <input type=\"text\" placeholder=\"Enter Suite\" defaultValue={state.address.suite} onChange={uponMakingChanges.bind(this, \"suite\")} />\r\n                        <h5>Street:</h5>\r\n                        <input type=\"text\" placeholder=\"Enter Street\" defaultValue={state.address.street} onChange={uponMakingChanges.bind(this, \"street\")} />\r\n                        <h5>City:</h5>\r\n                        <input ref={cityInputRef} type=\"text\" placeholder=\"Enter City\" defaultValue={state.address.city} onChange={uponMakingChanges.bind(this, \"city\")} required />\r\n                        <h5>ZipCode:</h5>\r\n                        <input type=\"text\" placeholder=\"Enter ZipCode\" defaultValue={state.address.zipcode} onChange={uponMakingChanges.bind(this, \"zipcode\")} />\r\n                        <h5>Lat:</h5>\r\n                        <input type=\"text\" placeholder=\"Enter coordinates\" defaultValue={state.address.geo.lat} onChange={uponMakingChanges.bind(this, \"lat\")} />\r\n                        <h5>Long:</h5>\r\n                        <input type=\"text\" placeholder=\"Enter coordinates\" defaultValue={state.address.geo.lng} onChange={uponMakingChanges.bind(this, \"lng\")} />\r\n                    </div>}\r\n\r\n                    <h5 className={classes.title} onClick={clickOnCompanyHandler}>Company {companyVisible ? '🔼' : '🔽'}</h5>\r\n                    {companyVisible && <div>\r\n                        <h5>Name:</h5>\r\n                        <input type=\"text\" placeholder=\"Enter company name\" defaultValue={state.company.name} onChange={uponMakingChanges.bind(this, \"company\")} />\r\n                        <h5>CatchPhrase:</h5>\r\n                        <input type=\"text\" placeholder=\"Enter CatchPhrase\" defaultValue={state.company.catchPhrase} onChange={uponMakingChanges.bind(this, \"catch\")} />\r\n                        <h5>BS:</h5>\r\n                        <input type=\"text\" placeholder=\"Enter BS\" defaultValue={state.company.bs} onChange={uponMakingChanges.bind(this, \"bs\")} />\r\n                    </div>}\r\n\r\n                    <p className={classes.submit}><button type=\"submit\" >Add Contact</button></p>\r\n                    <p className={classes.submit}><button type=\"button\" onClick={props.onCancelForm} className={classes.discard}>Discard Changes</button></p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContactForm;","import classes from './AddContact.module.css';\r\nimport AddContactForm from './AddContactForm/AddContactForm'\r\nimport { useState } from 'react';\r\n\r\nconst AddContact = props => {\r\n\r\n    const [addFormVisible, setFormVisible] = useState(false);\r\n\r\n    const showFormToggle = () => {\r\n        const currentlyVisible = addFormVisible;\r\n        setFormVisible(!currentlyVisible);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.contact_button}>\r\n                <p> <button type=\"button\" onClick={showFormToggle}>Add Contact ➕</button></p>\r\n            </div>\r\n            {addFormVisible && <AddContactForm onCancelForm={showFormToggle} submit={props.submit} />}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default AddContact;","import { useState, useCallback, useEffect } from \"react\";\n\nimport ContactsContainer from \"./ContactsContainer/ContactsContainer\";\n\nimport deleteUserFromArray from \"./NonReactJSFunctions/deleteUserFromArray\";\n\nimport EditDisplay from \"./EditDisplay/EditDisplay\";\n\nimport AddContact from \"./AddContact/AddContact\";\n\n\nfunction App() {\n\n  // data is the variable/state where we are storing every contact detail\n\n  const [data, setData] = useState([]);\n\n  // When we click on the edit button on any contact, we need to toggle the showEditDisplay state in order to display the edit window\n\n  const [showEditDisplay, setEditDisplay] = useState(false);\n\n  // The data to be edited is received by dataToEdit state, which is forwarded to the EditDisplay.js component.\n\n  const [dataToEdit, setDataToEdit] = useState({});\n\n  // When we click on any contact row, the details for that is displayed right below the row. expandDetailsID is a state that stores the ID of the row clicked, to achieve the above objective.\n  // NOTE: Go to line 130\n\n  const [expandDetailsID, setexpandDetailsID] = useState(-1);\n\n  // NOTE: To get data from the API\n\n  const fetchContactDataFromAPI = useCallback(\n    async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n\n        if (!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n        const result = await response.json();\n        result.sort((a, b) => a.name < b.name ? -1 : 1);\n        setData(result);\n      } catch (e) {\n        console.log(e);\n      }\n    }, []\n  );\n\n  useEffect(() => {\n    fetchContactDataFromAPI()\n  }, [fetchContactDataFromAPI]);\n\n\n  // NOTE: To delete a row\n  async function deleteUserHandler(id, e) {\n    try {\n      if (e) {\n        e.stopPropagation();\n      }\n      const selectedData = data.filter(eachUser => eachUser.id === id);\n\n      if (!window.confirm(`Are you sure you want to delete ${selectedData[0].name}'s details?`)) {\n        return;\n      }\n\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const updatedData = deleteUserFromArray(id, data);\n      setData(updatedData);\n      console.log(updatedData);\n\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // NOTE: when we click on the edit button, we need to displau the edit window. The below function is for that\n\n  const onClickEditHandler = (id, e) => {\n    if (e) {\n      e.stopPropagation();\n    }\n    const currState = showEditDisplay;\n    setEditDisplay(!currState);\n\n    if (currState) {\n      return;\n    }\n\n    const selectedData = data.filter(eachUser => eachUser.id === id);\n    setDataToEdit(selectedData[0]);\n  }\n\n  // When user edits some data, the below function is called \n\n  const submitHandler = (state, bool = false) => {\n\n    if (bool || !window.confirm(`Are you sure you want to apply changes?`)) {\n      onClickEditHandler();\n      return;\n    }\n\n    fetch(`https://jsonplaceholder.typicode.com/posts/${state.id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        ...state\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n      .then((response) => response.json()).then(result => {\n        onClickEditHandler();\n        let index = data.findIndex(eachUser => eachUser.id === result.id);\n        let updatedData = [...data];\n        updatedData[index] = result;\n\n        updatedData.sort((a, b) => a.name < b.name ? -1 : 1);\n\n        setData(updatedData);\n      });\n  }\n\n  // NOTE: The below function loads extra detail for the target contact\n\n  const onClickOnUserHandler = (id) => {\n    if (expandDetailsID === id) {\n      setexpandDetailsID(-1);\n      return;\n    }\n    setexpandDetailsID(id);\n  }\n\n  // NOTE: When the user adds a new contact, the below function is called\n\n  const submitAddUserHandler = (state) => {\n\n    if (!window.confirm(`Are you sure you want to add '${state.name}' to the list?`)) {\n      return;\n    }\n\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        ...state\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n      .then((response) => response.json())\n      .then(result => {\n        let maxID = data.reduce((max, obj) => (max.id > obj.id) ? max : obj);\n\n        result.id = maxID.id + 1;\n\n        let updatedData = [...data];\n        updatedData.push(result);\n\n        updatedData.sort((a, b) => a.name < b.name ? -1 : 1);\n\n        setData(updatedData);\n      });\n  }\n\n  return (\n    <>\n      {showEditDisplay && <EditDisplay user={dataToEdit} submit={submitHandler} />}\n      <ContactsContainer data={data} onDelete={deleteUserHandler} onEdit={onClickEditHandler} onExpand={onClickOnUserHandler} expandFor={expandDetailsID} />\n      <AddContact submit={submitAddUserHandler} />\n    </>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"edit_container\":\"EditDisplay_edit_container__3v1mM\",\"modal\":\"EditDisplay_modal__1whwQ\",\"form\":\"EditDisplay_form__yq96s\",\"submit\":\"EditDisplay_submit__2AjrP\",\"title\":\"EditDisplay_title__3qbyT\",\"discard\":\"EditDisplay_discard__1W5IS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"ContactsRow_common__1QjMS\",\"selected\":\"ContactsRow_selected__30GiK\",\"circle\":\"ContactsRow_circle__1IzPF\",\"names\":\"ContactsRow_names__hEijh\",\"actionspace\":\"ContactsRow_actionspace__20y5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_container\":\"ContactsRowAllDetails_table_container__3-fie\",\"dropdown\":\"ContactsRowAllDetails_dropdown__2rY2J\",\"table\":\"ContactsRowAllDetails_table__3q1pU\",\"heading\":\"ContactsRowAllDetails_heading__3vou8\"};"],"sourceRoot":""}